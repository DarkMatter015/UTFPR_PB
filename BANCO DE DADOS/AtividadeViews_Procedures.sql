-- CRIA��O DA DATABASE
CREATE DATABASE VENDAS
GO
USE VENDAS
GO

-- CRIA��O DAS TABELAS
CREATE TABLE CLIENTE
(
	CLI_ID INT CONSTRAINT PK_CLIENTE PRIMARY KEY IDENTITY(1,1),
	CLI_NM VARCHAR(200) CONSTRAINT NN_CLI_NM NOT NULL,
	CLI_NM_ENDERECO VARCHAR(200),
	CLI_NM_BAIRRO VARCHAR(100),
	CLI_NM_CIDADE VARCHAR(100),
	CLI_NM_UF VARCHAR(2),
	CLI_NR_CEP DECIMAL(8,0),
	CLI_NR_TEL VARCHAR(20),
	CLI_NR_FAX VARCHAR(20),
	CLI_NM_CONTATO VARCHAR(50),
	CLI_NM_EMAIL VARCHAR(200),
	CLI_NR_CNPJ VARCHAR(20),
	CLI_NR_INSCREST VARCHAR(20),
	CLI_DS_OBS VARCHAR(4999) 
)

CREATE TABLE REPRESENTADA
(
	REP_ID INT CONSTRAINT PK_REPRESENTADA PRIMARY KEY IDENTITY(1,1),
	REP_NM VARCHAR(200) CONSTRAINT NN_REP_NM NOT NULL,
	REP_NM_ENDERECO VARCHAR(200),
	REP_NM_BAIRRO VARCHAR(100),
	REP_NM_CIDADE VARCHAR(100),
	REP_NM_UF VARCHAR(2),
	REP_NR_CEP DECIMAL(8,0),
	REP_NR_TEL VARCHAR(20),
	REP_NR_FAX VARCHAR(20),
	REP_NM_CONTATO VARCHAR(50),
	REP_NM_EMAIL VARCHAR(200),
	REP_NR_CNPJ VARCHAR(20),
	REP_NR_INSCREST VARCHAR(20),
	REP_DS_OBS VARCHAR(4999),
	REP_PC_COMISSAO DECIMAL(14,2) CONSTRAINT NN_REP_PS_COMISSAO NOT NULL,
	REP_QT_DIASLIBERACAO INT CONSTRAINT NN_REP_QT_DIASLIBERACAO NOT NULL,
)

CREATE TABLE VENDA
(
	VEN_ID INT CONSTRAINT PK_VENDA PRIMARY KEY IDENTITY(1,1),
	CLI_ID INT CONSTRAINT FK_CLIENTE FOREIGN KEY REFERENCES CLIENTE(CLI_ID),
	REP_ID INT CONSTRAINT FK_REPRESENTADA FOREIGN KEY REFERENCES REPRESENTADA(REP_ID),
	VEN_DT DATETIME CONSTRAINT NN_VEN_DT NOT NULL,
	VEN_ST INT CONSTRAINT NN_VEN_ST NOT NULL,
	VEN_VL_TOTAL DECIMAL(19,4) CONSTRAINT NN_VEN_VL_TOTAL NOT NULL,
	VEN_PC_COMISSAO DECIMAL(14,2) CONSTRAINT NN_VEN_PC_COMISSAO NOT NULL,
	VEN_DS_OBS VARCHAR(4999)
)

CREATE TABLE VENDA_PARCELA
(
	VPA_ID INT CONSTRAINT PK_VENDA_PARCELA PRIMARY KEY IDENTITY(1,1),
	VEN_ID INT CONSTRAINT FK_VENDA_PARCELA FOREIGN KEY REFERENCES VENDA(VEN_ID),
	VPA_DT_VENC DATETIME CONSTRAINT NN_VPA_DT_VENC NOT NULL,
	VPA_QT_DIAS INT CONSTRAINT NN_VPA_QT_DIAS NOT NULL,
	VPA_VL DECIMAL(19,4) CONSTRAINT NN_VPA_VL NOT NULL,
	VPA_VL_COMISSAO DECIMAL(19,4) CONSTRAINT NN_VPA_VL_COMISSAO NOT NULL,
	VPA_DT_RECEBIM DATETIME,
	VPA_VL_PAR INT CONSTRAINT NN_VL_PAR NOT NULL
)

CREATE TABLE VENDA_PRODUTO
(
	VEP_ID INT CONSTRAINT PK_VENDA_PRODUTO PRIMARY KEY IDENTITY(1,1),
	VEN_ID INT CONSTRAINT FK_VENDA_PRODUTO FOREIGN KEY REFERENCES VENDA(VEN_ID),
	VEP_NR_ITEM INT,
	VEP_QT INT CONSTRAINT NN_VEP_QT NOT NULL,
	VEP_DS_PRODUTO VARCHAR(200) CONSTRAINT NN_VEP_DS_PRODUTO NOT NULL,
	VEP_VL_UNIT DECIMAL(19,4) CONSTRAINT NN_VEP_VL_UNIT NOT NULL,
	VEP_VL_TOTAL DECIMAL(19,4) CONSTRAINT NN_VEP_VL_TOTAL NOT NULL,
	VEP_DT_ENTREGA DATETIME,
	VEP_DT_INSPECAO DATETIME
)

-- inserts
INSERT INTO CLIENTE (CLI_NM, CLI_NM_ENDERECO, CLI_NM_BAIRRO, CLI_NM_CIDADE, CLI_NM_UF, CLI_NR_CEP, CLI_NR_TEL, CLI_NR_FAX, CLI_NM_CONTATO, CLI_NM_EMAIL, CLI_NR_CNPJ, CLI_NR_INSCREST, CLI_DS_OBS)
VALUES 
('Empresa Alpha Ltda', 'Rua das Flores, 123', 'Centro', 'São Paulo', 'SP', 12345678, '(11) 98765-4321', '(11) 98765-4322', 'João Silva', 'joao@alpha.com', '12.345.678/0001-99', '123456789', 'Cliente importante'),
('Beta Comércio S/A', 'Av. Central, 456', 'Jardins', 'Rio de Janeiro', 'RJ', 87654321, '(21) 91234-5678', NULL, 'Maria Oliveira', 'maria@beta.com', '98.765.432/0001-88', '987654321', NULL),
('Gamma Indústria', 'Rua Industrial, 789', 'Industrial', 'Belo Horizonte', 'MG', 45678912, '(31) 99876-5432', '(31) 99876-5433', 'Carlos Souza', 'carlos@gamma.com', '11.222.333/0001-77', '112233445', 'Observação geral'),
('Delta Serviços', 'Rua do Comércio, 101', 'Comercial', 'Curitiba', 'PR', 34567890, '(41) 98712-3456', NULL, 'Ana Pereira', 'ana@delta.com', '44.555.666/0001-66', '445566778', 'Cliente recorrente'),
('Epsilon Tecnologia', 'Av. Tecnológica, 202', 'Tecnológico', 'Porto Alegre', 'RS', 23456789, '(51) 97654-3210', NULL, 'Lucas Mendes', 'lucas@epsilon.com', '77.888.999/0001-55', '778899001', NULL);

INSERT INTO REPRESENTADA (REP_NM, REP_NM_ENDERECO, REP_NM_BAIRRO, REP_NM_CIDADE, REP_NM_UF, REP_NR_CEP, REP_NR_TEL, REP_NR_FAX, REP_NM_CONTATO, REP_NM_EMAIL, REP_NR_CNPJ, REP_NR_INSCREST, REP_DS_OBS, REP_PC_COMISSAO, REP_QT_DIASLIBERACAO)
VALUES 
('Rep Alpha', 'Rua Principal, 100', 'Centro', 'São Paulo', 'SP', 12345678, '(11) 91234-5678', NULL, 'Pedro Santos', 'pedro@repalpha.com', '23.456.789/0001-11', '234567890', 'Representada confiável', 5.00, 30),
('Rep Beta', 'Av. Secundária, 200', 'Jardins', 'Rio de Janeiro', 'RJ', 87654321, '(21) 98765-4321', '(21) 98765-4322', 'Fernanda Lima', 'fernanda@repbeta.com', '32.456.789/0001-22', '345678901', NULL, 4.50, 45),
('Rep Gamma', 'Rua Comercial, 300', 'Industrial', 'Belo Horizonte', 'MG', 45678912, '(31) 97654-3210', NULL, 'Rafael Costa', 'rafael@repgamma.com', '43.567.890/0001-33', '456789012', 'Alta comissão', 6.00, 60),
('Rep Delta', 'Av. Empresarial, 400', 'Comercial', 'Curitiba', 'PR', 34567890, '(41) 91234-5678', NULL, 'Juliana Almeida', 'juliana@repdelta.com', '54.678.901/0001-44', '567890123', NULL, 3.75, 15),
('Rep Epsilon', 'Rua Tecnológica, 500', 'Tecnológico', 'Porto Alegre', 'RS', 23456789, '(51) 98765-4321', NULL, 'Thiago Rocha', 'thiago@repepsilon.com', '65.789.012/0001-55', '678901234', 'Parceiro estratégico', 5.50, 30);

INSERT INTO VENDA (CLI_ID, REP_ID, VEN_DT, VEN_ST, VEN_VL_TOTAL, VEN_PC_COMISSAO, VEN_DS_OBS)
VALUES 
(1, 1, '2025-05-01 10:00:00', 1, 10000.5000, 5.00, 'Venda inicial'),
(2, 2, '2025-05-02 14:30:00', 2, 25000.7500, 4.50, NULL),
(3, 3, '2025-05-03 09:15:00', 1, 15000.2500, 6.00, 'Venda com desconto'),
(4, 4, '2025-05-04 16:45:00', 3, 30000.0000, 3.75, 'Venda urgente'),
(5, 5, '2025-05-05 11:20:00', 1, 20000.3000, 5.50, NULL);


INSERT INTO VENDA_PARCELA (VEN_ID, VPA_DT_VENC, VPA_QT_DIAS, VPA_VL, VPA_VL_COMISSAO, VPA_DT_RECEBIM, VPA_VL_PAR)
VALUES 
(1, '2025-06-01T00:00:00', 30, 5000.2500, 250.0125, NULL, 1),
(2, '2025-06-15T00:00:00', 45, 12500.3750, 562.5169, '2025-06-10T00:00:00', 1),
(3, '2025-07-01T00:00:00', 60, 7500.1250, 450.0075, NULL, 1),
(4, '2025-05-20T00:00:00', 15, 15000.0000, 562.5000, NULL, 1),
(5, '2025-06-05T00:00:00', 30, 10000.1500, 550.0083, '2025-06-01T00:00:00', 1);


INSERT INTO VENDA_PRODUTO (VEN_ID, VEP_NR_ITEM, VEP_QT, VEP_DS_PRODUTO, VEP_VL_UNIT, VEP_VL_TOTAL, VEP_DT_ENTREGA, VEP_DT_INSPECAO)
VALUES 
(1, 1, 10, 'Produto A', 500.0500, 5000.5000, '2025-05-10T00:00:00', NULL),
(2, 1, 25, 'Produto B', 1000.0300, 25000.7500, '2025-05-15T00:00:00', '2025-05-16T00:00:00'),
(3, 1, 15, 'Produto C', 1000.0167, 15000.2505, '2025-05-12T00:00:00', NULL),
(4, 1, 30, 'Produto D', 1000.0000, 30000.0000, '2025-05-20T00:00:00', '2025-05-21T00:00:00'),
(5, 1, 20, 'Produto E', 1000.0150, 20000.3000, '2025-05-15T00:00:00', NULL);


-- Lista de Exercícios 1: Views e Stored Procedures
    
--1) Crie uma view para Listar todos os dados dos clientes e a somatória do valor das vendas (Para cada cliente). Ordene do cliente com maior valor de vendas para o menor valor de vendas.

CREATE OR ALTER VIEW V_CLIENTE_VENDAS
AS
SELECT 
  C.CLI_NM AS CLIENTE, SUM(V.VEN_VL_TOTAL) AS TOTAL FROM VENDA V, CLIENTE C 
  WHERE V.CLI_ID = C.CLI_ID
  GROUP BY C.CLI_NM


SELECT CLIENTE, TOTAL
FROM V_CLIENTE_VENDAS
ORDER BY TOTAL DESC

--2) Crie as seguintes stored procedures:

--a) Crie uma SP para inserir um produto em uma venda e retornar (por parâmetro de output) o código do registro inserido.

CREATE PROCEDURE SP_INS_VENDA_PRODUTO
(@VEP_ID INT OUTPUT
,@VEN_ID INT
,@VEP_NR_ITEM INT
,@VEP_QT INT
,@VEP_DS_PRODUTO INT
,@VEP_VL_UNIT INT
,@VEP_VL_TOTAL INT
,@VEP_DT_ENTREGA INT
,@VEP_DT_INSPECAO INT
,@VALOR_RETORNO INT
)
AS

INSERT INTO VENDA_PRODUTO (VEN_ID,VEP_NR_ITEM,VEP_QT,VEP_DS_PRODUTO,VEP_VL_UNIT,VEP_VL_TOTAL,VEP_DT_ENTREGA,VEP_DT_INSPECAO)
VALUES (@VEN_ID,@VEP_NR_ITEM,@VEP_QT,@VEP_DS_PRODUTO,@VEP_VL_UNIT,@VEP_VL_TOTAL,@VEP_DT_ENTREGA,@VEP_DT_INSPECAO)

SET @VEP_ID = @@IDENTITY

 
--b) Crie uma SP para alterar o PC_COMISSAO de uma representada e em seguida atualize a mesma informação em todas as vendas da representada atualizada. Se ocorrer erro retorno por OutPUT -1 ou 0 para sucesso.

CREATE PROCEDURE SP_UPD_COMISSAO
(@REP_ID INT
,@PC_COMISSAO NUMERIC(5,2)
,@RET INT OUTPUT
)
AS

UPDATE REPRESENTADA
SET REP_PC_COMISSAO = @PC_COMISSAO
WHERE REP_ID = @REP_ID

UPDATE VENDA SET VEN_PC_COMISSAO = @PC_COMISSAO
WHERE REP_ID = @REP_ID

IF (@@ERROR <> 0)
  SET @RET = -1
ELSE
SET @RET = 0


EXEC SP_UPD_COMISSAO 1, 8.5, NULL


--c) Crie uma SP quer retorno por OutPut a quantidade de vendas que um cliente (Passado por parâmetro) possui:

CREATE PROCEDURE SP_QTD_VENDAS
(@CLI_ID INT
,@RET INT OUTPUT
)
AS

SELECT @RET = COUNT(*) FROM VENDA
WHERE CLI_ID = @CLI_ID


--d) Crie uma SP que lista o valor total das parcelas ou dos produtos de uma venda (de acordo com o que for passado por parâmetro para o parâmetro Tipo, 1 será Parcela, 2 será produto). Liste também o valor da total da tabela venda.



CREATE PROCEDURE SP_VALORES
(@TIPO INT
,@VEN_ID INT
)
AS

IF (@TIPO = 1)
  SELECT VEN_VL_TOTAL, (SELECT SUM(VEP_VL_TOTAL) FROM VENDA_PRODUTO WHERE VEN_ID = @VEN_ID) FROM VENDA
  WHERE VEN_ID = @VEN_ID
ELSE
  SELECT VEN_VL_TOTAL, (SELECT SUM(VPA_VL) FROM VENDA_PARCELA WHERE VEN_ID = @VEN_ID) FROM VENDA
  WHERE VEN_ID = @VEN_ID


